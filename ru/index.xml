<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Academic</title>
    <link>https://aaandrievskaya.github.io/ru/</link>
      <atom:link href="https://aaandrievskaya.github.io/ru/index.xml" rel="self" type="application/rss+xml" />
    <description>Academic</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ru</language><lastBuildDate>Sat, 04 Jun 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://aaandrievskaya.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Academic</title>
      <link>https://aaandrievskaya.github.io/ru/</link>
    </image>
    
    <item>
      <title>Время расплаты</title>
      <link>https://aaandrievskaya.github.io/ru/post/how-was-my-week-5/</link>
      <pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://aaandrievskaya.github.io/ru/post/how-was-my-week-5/</guid>
      <description>&lt;h2 id=&#34;моя-по-настоящему-загруженная-неделя-и-мысли&#34;&gt;Моя по-настоящему загруженная неделя и мысли&lt;/h2&gt;
&lt;p&gt;Итак, почти закончилась еще одна неделя. На ней я посетила в последний раз все свои пары в этом учебном году. Это грустно? Возможно. Но мне было гораздо печальнее от того, какое количество долгов я успела насобирать за это время:)&lt;/p&gt;
&lt;p&gt;И казалось бы, ведь это совсем не удивительно. Если ты не выполняешь работу, то ведь она от этого не перестает существовать. Все так, но мозг хитер и ленив. Я себе в этом не признавалась. и вот пришло время расплаты.&lt;/p&gt;
&lt;p&gt;Ну, с тем, что именно в 4 модуле я перестала быть отличницей и потеряла повышенную стипендию, я смирилась давно. В целом, я и сейчас считаю, что вытянуть все предметы на &amp;ldquo;5&amp;rdquo; было бы подобно смерти и я бы не справилась в любом случае. Но ведь чтобы учиться на &amp;ldquo;4&amp;rdquo; нужно работать тоже немало)).&lt;/p&gt;
&lt;p&gt;Вчера я с трудом смогла закрыть английский язык на &amp;ldquo;;&amp;rdquo;, чему очень рада. Впереди еще любимые Операционные системы и Технология программирования. Если честно, переживать есть о чем, ведь я не могу знать до самого конца сколько баллов смогу получить. Все очень сложно. Но я готова бороться. Пожелайте мне удачи :)&lt;/p&gt;
&lt;h2 id=&#34;my-social-networks&#34;&gt;My social networks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vk.com/grandryce&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;VK&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;grandryce_an&#34;&gt;&lt;strong&gt;Instagram&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Фишинг</title>
      <link>https://aaandrievskaya.github.io/ru/post/phishing/</link>
      <pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://aaandrievskaya.github.io/ru/post/phishing/</guid>
      <description>&lt;h2 id=&#34;что-такое-фишинг&#34;&gt;Что такое фишинг?&lt;/h2&gt;
&lt;p&gt;Фишинг — вид интернет-мошенничества, цель которого — получить конфиденциальные данные пользователей от них самих. Сюда относится кража паролей, номеров кредитных карт, банковских счетов и другой конфиденциальной информации. Фишеров интересуют данные, которые дают прямой доступ к деньгам, а также личная информация пользователей, помогающая сделать достоверными фишинговые письма.&lt;/p&gt;
&lt;h2 id=&#34;виды-фишинговых-приманок&#34;&gt;Виды фишинговых приманок&lt;/h2&gt;
&lt;p&gt;Подделка домена или имитация знакомого пользователя — сообщение может прийти с адреса знакомого вам отправителя или доверенной организации, который отличается от исходного какой-нибудь едва заметной деталью или символом (&lt;a href=&#34;mailto:exapmle@mail.com&#34;&gt;exapmle@mail.com&lt;/a&gt; вместо &lt;a href=&#34;mailto:example@mail.com&#34;&gt;example@mail.com&lt;/a&gt;, &lt;a href=&#34;mailto:supportonline@mail.com&#34;&gt;supportonline@mail.com&lt;/a&gt; вместо &lt;a href=&#34;mailto:support.online@mail.com&#34;&gt;support.online@mail.com&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Текстовые приманки — текстовое сообщение, поступающее от якобы доверенного источника, такого как банк, государственное учреждение или коммерческая компания. В сообщении пользователя просят предоставить личную информацию (имя пользователя, пароль или конфиденциальные финансовые данные). Изучите внимательно письмо, если информация требуется «срочно» или «в кратчайшие сроки» — это один из признаков фишингового письма.&lt;/p&gt;
&lt;p&gt;Фишинговые ссылки — сообщение электронной почты содержит ссылку на страницу, похожую на страницу авторизации доверенного сайта и призывающую, например, срочно поменять пароль. Этим действием вы можете передать его непосредственно в руки злоумышленников.&lt;/p&gt;
&lt;p&gt;Фишинговые вложения — сообщение электронной почты содержит вредоносный файл и призыв его открыть.&lt;/p&gt;
&lt;p&gt;Ссылки на поддельные места хранения в облаке — электронное сообщение приходит якобы от доверенного источника и побуждает пользователя дать разрешение и/или ввести личную информацию, такую как учетные данные, в обмен на доступ к поддельному месту хранения в облаке.&lt;/p&gt;
&lt;h2 id=&#34;способы-защиты&#34;&gt;Способы защиты&lt;/h2&gt;
&lt;p&gt;Главный принцип: не делать ничего автоматически, бездумно. Знакомый вид электронного письма не должен позволить адресату выполнить стандартное действие, не вчитываясь. Будьте бдительны: все ли в порядке с адресами, подписями? Нет ли в письме подозрительных вложений и открытого призыва их открыть? Опасайтесь сообщений с угрозами блокировки ваших учетных записей и предложений перехода по «спасительным» ссылкам для восстановления доступа. Помните, что есть перечень данных, которые тот или иной сервис не вправе у вас запрашивать – его лучше уточнить у специалистов поддержки каждой конкретной организации. Одновременно с этим у некоторых сервисов есть данные, которыми злоумышленники могут не располагать – например, ваше имя и фамилия. Поэтому, если вам приходит не персонализированное письмо, это лишний повод задуматься о том, кто его прислал.&lt;/p&gt;
&lt;p&gt;При возникновении любого рода сомнений нужно связаться с самой компанией-отправителем (отдельным письмом или по телефону) и проверить подлинность сообщения&lt;/p&gt;
&lt;p&gt;По возможности отказаться от переходов на проверенные ресурсы через гиперссылки из сообщений, отправленных незнакомыми отправителями&lt;/p&gt;
&lt;p&gt;Помните, что даже упоминание личной информации, на первый взгляд недоступной мошенникам (например, обращение по имени), не гарантирует полной безопасности. Злоумышленники часто проводят подготовительную работу, получая информацию о жертве из соцсетей&lt;/p&gt;
&lt;p&gt;В современном мире пароли не могут обеспечить необходимой защиты, особенно когда пользователи используют простые для запоминания комбинации, облегчающие хакерам процедуру взлома, а также единственный пароль для всех сервисов и приложений, увеличивая тем самым ущерб от компрометации. Важно усиливать защиту с помощью многофакторной аутентификации (подтверждение по нескольким каналам). Переход к многофакторной аутентификации сводит на нет 99% атак, направленных на кражу учетных данных. Важно отметить, что одноразовые коды по SMS, используемые в качестве второго фактора, также могут быть скомпрометированы: подтверждение по SMS всего лишь чуть более безопасно, чем простые пароли. Сейчас крупные игроки рынка стали предлагать многофакторную аутентификацию с помощью специальных приложений, использующих коды или биометрию (отпечаток пальца или лицо), а некоторые - возможность полностью отказаться от паролей, что радикально снижает вероятность успешной фишинговой атаки&lt;/p&gt;
&lt;p&gt;Обращайте внимание на предупреждение браузера о подозрительных сайтах – такие точно не стоит открывать
Современные почтовые сервисы также заботятся о безопасности пользователей, создавая специальные «песочницы» для проверки подозрительных сообщений в изолированном контейнере и не «выпускают» информацию в систему, пока не будет уверенности в безопасности. Прислушивайтесь к рекомендациям и сообщайте почтовому агенту о случаях фишинга (пользователи Microsoft Outlook могут это сделать с помощью кнопки «Отправить отчет»).&lt;/p&gt;
&lt;p&gt;Существуют специальные группы (PhishTank), собирающие целые базы фишинговых адресов, где можно проверить поступившее сообщение.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Мое возвращение</title>
      <link>https://aaandrievskaya.github.io/ru/post/how-was-my-week-4/</link>
      <pubDate>Sat, 28 May 2022 00:00:00 +0000</pubDate>
      <guid>https://aaandrievskaya.github.io/ru/post/how-was-my-week-4/</guid>
      <description>&lt;h2 id=&#34;моя-загруженная-неделя&#34;&gt;Моя загруженная неделя&lt;/h2&gt;
&lt;p&gt;Во-первых, как вы уже поняли, меня выписали) Я снова полноценный человек общества! Почти&amp;hellip;&lt;/p&gt;
&lt;p&gt;Дело в том, что моя нога еще не полностью зажила, я все еще сильно хромаю. Врач предупредил, что растяжение может заживать очень долго, и я успокоился.&lt;/p&gt;
&lt;p&gt;Что ж, теперь, когда я больше не дома, мне есть чем поделиться с вами! Я посещал пары ОС в четверг и английский язык в пятницу.&lt;/p&gt;
&lt;p&gt;В четверг сдал свой долг по докладу на тему &amp;ldquo;Схема аутентификации пользователей с использованием логинов и паролей&amp;rdquo;. По иронии судьбы, в тот день мошенники взломали мой аккаунт Вконтакте. Это был печальный, но бесценный опыт. Ведь даже зная всю теорию интернет-безопасности, я все равно был пойман с помощью социальной инженерии на фишинговой ссылке. Поэтому призываю всех вас еще раз вспомнить о правилах безопасности и рационально мыслить. Не повторяйте моих ошибок!)&lt;/p&gt;
&lt;p&gt;В пятницу я был рад видеть ребят, по которым сел так скучать. К сожалению, есть много долгов по английскому языку, которые я должен выполнить за неделю. Но это отчасти моя вина, так как некоторые задачи я мог бы сделать и дома, а вместо этого решил взять себе небольшой отпуск&amp;hellip; Хотя, ни о чем не жалею :)&lt;/p&gt;
&lt;p&gt;Ну, на этом я закончу свой отчет. Увидимся через неделю!&lt;/p&gt;
&lt;h2 id=&#34;my-social-networks&#34;&gt;My social networks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vk.com/grandryce&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;VK&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;grandryce_an&#34;&gt;&lt;strong&gt;Instagram&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Научные языки программирования</title>
      <link>https://aaandrievskaya.github.io/ru/post/scientific-programming-languages/</link>
      <pubDate>Sat, 28 May 2022 00:00:00 +0000</pubDate>
      <guid>https://aaandrievskaya.github.io/ru/post/scientific-programming-languages/</guid>
      <description>&lt;h2 id=&#34;главная-информация&#34;&gt;Главная Информация&lt;/h2&gt;
&lt;p&gt;Научное программирование — это строго ориентированный стиль программирования для научных вычислений. От других видов программирования его отличает предельная корректность и стабильность конечного продукта, строгое разделение научной и интерфейсной частей, индивидуальность алгоритмов, преобладание эффективности над универсальностью.&lt;/p&gt;
&lt;p&gt;Научное программирование лежит в основе любого современного глобального исследования. Все передовые технологии — от квантовых компьютеров до космических программ — были бы невозможны без ученых-программистов, которые могут предоставить ученым надежный и точный инструмент для совершения открытий.&lt;/p&gt;
&lt;p&gt;Ряд отраслей науки напрямую зависит от уровня развития научного программирования. Так, своего внедрения ждут беспилотные автомобили, «умные» системы управления городским и сельскохозяйственным хозяйством, фондовые биржи; ждем робототехники, генной инженерии, искусственного интеллекта сверх человеческих возможностей&lt;/p&gt;
&lt;p&gt;##Специализации&lt;/p&gt;
&lt;p&gt;Ученые используют различные языки программирования, выбор которых зависит от типа задачи и предпочтений автора. Исторически сложилось так, что первым языком программирования высокого уровня был Фортран; на нем написано множество отлаженных библиотек математической статистики и библиотек для решения дифференциальных уравнений, что актуально для экономики и биологии соответственно.&lt;/p&gt;
&lt;p&gt;Python имеет более простой синтаксис, который также подходит для программирования математических вычислений. Язык Python используется для обработки данных в математике, физике, экономике, биологии, химии и может работать с некоторыми другими «научными» языками: Fortran, C++, C#.&lt;/p&gt;
&lt;p&gt;В свою очередь C# позволяет программировать на платформе .NET, адаптировать программу к CLR и ускорять разработку в рамках операционных научных сессий.&lt;/p&gt;
&lt;h2 id=&#34;будущее-профессии-программиста-ученого&#34;&gt;Будущее профессии программиста-ученого&lt;/h2&gt;
&lt;p&gt;Программирование движет наукой, которая движет технологический прогресс. Изобретения, еще вчера считавшиеся революционными, служат повседневным потребностям в 21 веке: микроволновая печь, мобильный телефон, 8-битный домашний компьютер. От программиста-ученого зависит, каких вершин достигнет наука сегодня и какие из них завтра войдут в каждый дом.&lt;/p&gt;
&lt;p&gt;В руках программиста-ученого находятся инструменты не только для развития отрасли, но и для улучшения общего качества жизни. Такой специалист повышает прогностическую функцию человечества, помогая прогнозировать и предотвращать климатические, финансовые и гуманитарные катастрофы.&lt;/p&gt;
&lt;h2 id=&#34;где-учиться-программированию&#34;&gt;Где учиться программированию&lt;/h2&gt;
&lt;p&gt;Вы можете изучать программирование в любое время и в любом месте. Специализированная литература, очное обучение, Интернет-сайты – все эти ресурсы способны обеспечить начинающего программиста базой знаний, достаточной для самостоятельного творчества и повышения квалификации, в том числе в русле научных разработок.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Периферийные устройства электронных вычислительных систем</title>
      <link>https://aaandrievskaya.github.io/ru/project/project-2/</link>
      <pubDate>Sat, 28 May 2022 00:00:00 +0000</pubDate>
      <guid>https://aaandrievskaya.github.io/ru/project/project-2/</guid>
      <description>&lt;h2 id=&#34;введение&#34;&gt;Введение&lt;/h2&gt;
&lt;p&gt;Невозможно представить компьютер без средств связи с человеком или средств сопряжения с внешними объектами управления. Такие инструменты необходимы для загрузки программ и данных, выгрузки полученных результатов, хранения огромных массивов информации, корректировки работы компьютера пользователем, а также для непосредственного управления производственными процессами и объектами. Все эти функции возложены на разнообразные периферийные устройства (ПУ), которые служат для преобразования способов представления информации, пригодных для человека и используемых в компьютере, для управления вводом/выводом и организации хранения информации вне зависимости от наличия питания. .&lt;/p&gt;
&lt;p&gt;Таким образом, считаю важным систематизировать и структурировать информацию о периферийных устройствах компьютеров, а затем определить значение места периферийных устройств в электронно-вычислительных машинах.&lt;/p&gt;
&lt;h2 id=&#34;1-взаимодействие-пу-и-компьютера&#34;&gt;1. Взаимодействие ПУ и компьютера&lt;/h2&gt;
&lt;h3 id=&#34;11-определение-периферийных-устройств&#34;&gt;1.1 Определение периферийных устройств&lt;/h3&gt;
&lt;p&gt;Периферийные, или внешние, устройства получили свое название в 1960-е годы, когда процессор и оперативная память размещались в стоечных шкафах, образуя своеобразный «центр», а остальные устройства, в основном электромеханические, находились на некотором удалении от него, т.е. на периферии. Но современные ПУ располагаются как внутри корпуса компьютера, так и снаружи, в зависимости от типа устройства и его взаимодействия с объектами внешнего мира.
Периферийное устройство — дополнительное вспомогательное устройство, внешнее по отношению к центральному процессору и оперативной памяти, предназначенное для ввода и/или вывода информации в компьютер и хранения данных, и расширяющее его функциональные возможности. То есть это по большому счету необязательное устройство для работы компьютера, но в большинстве случаев оно необходимо для реализации тех или иных пользовательских задач.
Существует четыре типа периферийных устройств:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;устройства ввода;&lt;/li&gt;
&lt;li&gt;устройства вывода;&lt;/li&gt;
&lt;li&gt;устройства ввода-вывода;&lt;/li&gt;
&lt;li&gt;устройства хранения данных.
Одни ПУ, называемые внутренними, монтируются в одном корпусе с компьютером (например, жесткий диск, звуковая карта, сетевая карта), а другие, называемые внешними, находятся вне корпуса (например, клавиатура, мышь, принтер) и подключены к нему с помощью проводного или беспроводного соединения.
Периферийные устройства подключаются к центральной части компьютера через интерфейс, поэтому важно дать несколько определений этого важного понятия.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;12-интерфейс&#34;&gt;1.2 Интерфейс&lt;/h3&gt;
&lt;p&gt;Интерфейс (интерфейс) - совокупность средств и правил, обеспечивающих взаимодействие устройств компьютера или системы обработки информации и (или) программ. В дополнение к этим стандартным определениям удобно использовать еще одно, расширяющее и уточняющее вышеизложенное.
Интерфейс — это набор средств и правил, обеспечивающих взаимодействие:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;между разными узлами вычислительной системы (аппаратный интерфейс);&lt;/li&gt;
&lt;li&gt;между программами (программный интерфейс);&lt;/li&gt;
&lt;li&gt;между аппаратным и программным обеспечением (аппаратные и программные
интерфейс);&lt;/li&gt;
&lt;li&gt;между человеком и компьютером (человеко-машинный интерфейс).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Очень перспективными для использования кажутся периферийные устройства с таким типом человеко-машинного интерфейса, как класс USB HID. USB HID — это класс USB-устройств, которые подключаются к компьютеру для взаимодействия с человеком. К этому классу относятся такие устройства, как клавиатура, мышь, игровой контроллер.&lt;/p&gt;
&lt;h3 id=&#34;13-шины&#34;&gt;1.3 Шины&lt;/h3&gt;
&lt;p&gt;Итак, для подключения периферийного устройства необходимо сначала предоставить аппаратный интерфейс. В компьютере это реализовано шинами ввода-вывода. Современные компьютеры содержат два типа шин:
а) системная шина, соединяющая центральный процессор с главным
Память;
б) несколько шин ввода-вывода, соединяющих различные периферийные устройства с системной шиной и процессором через мост
Шина представляет собой подсистему передачи данных как внутри
компьютер и не только. В отличие от двухточечного соединения, предназначенного для соединения только двух устройств, шина, используя один и тот же набор проводов, может обеспечить логическое соединение нескольких периферийных устройств.
Основное различие между периферийными устройствами заключается в способе их подключения — внутреннем или внешнем. Первый реализуется с помощью внутренних шин, представленных внутренними разъемами (слотами) на системной плате, второй способ реализуется внешними шинами, представленными внешними разъемами (портами).
Однако в общем случае используется схема подключения внешних периферийных устройств.&lt;/p&gt;
&lt;p&gt;Далее следует вспомнить о необходимости программно-аппаратного интерфейса, т.е. драйвера контроллера периферии.&lt;/p&gt;
&lt;h3 id=&#34;14-драйверы&#34;&gt;1.4 Драйверы&lt;/h3&gt;
&lt;p&gt;Драйвер — это программное обеспечение компьютера, с помощью которого другое программное обеспечение (операционная система) получает доступ к аппаратной части некоторого, в нашем случае, периферийного устройства. Обычно операционные системы поставляются с драйверами для ключевых аппаратных компонентов, без которых система не может работать. Однако для некоторых устройств (таких как видеокарта или принтер) могут потребоваться специальные драйверы, обычно предоставляемые производителем устройства.&lt;/p&gt;
&lt;h2 id=&#34;2-типы-периферии&#34;&gt;2. Типы периферии&lt;/h2&gt;
&lt;h3 id=&#34;21-устройства-ввода&#34;&gt;2.1 Устройства ввода&lt;/h3&gt;
&lt;p&gt;Устройства ввода — это те устройства, через которые информация может быть введена в компьютер. Основное их предназначение – реализация воздействия на ПК. Многообразие производимых устройств ввода породило целые технологии: от тактильных до голосовых. Хотя они работают по разным принципам, они предназначены для реализации одной задачи — позволить пользователю общаться со своим компьютером.
КЛАВИАТУРА
Основным устройством ввода большинства компьютерных систем является клавиатура. Пока система распознавания голоса не сможет надежно воспринимать человеческую речь, доминирующее положение клавиатуры вряд ли изменится.
СКАНЕР
Сканер — это устройство, которое путем анализа объекта (обычно изображения, текста) создает цифровую копию изображения объекта.
Процесс получения этой копии называется сканированием.
мышь
Манипулятор и координатное устройство компьютера. Это дополнение к клавиатуре и необходимое оборудование при использовании графического интерфейса.
Джойстик
Координатно-манипуляторное устройство компьютера в виде ручки с кнопками. Используется в симуляторах и совместно с игровыми программами. Разновидностью игровых джойстиков являются «геймпады», выполненные в виде малогабаритных панелей, оснащенных функциональными кнопками и переключателями.
Веб-камера
Цифровая видео- или фотокамера, способная снимать изображения в режиме реального времени для дальнейшей передачи через Интернет.&lt;/p&gt;
&lt;h3 id=&#34;22-устройства-вывода&#34;&gt;2.2 Устройства вывода&lt;/h3&gt;
&lt;p&gt;Периферийные устройства вывода предназначены для вывода информации в требуемом оператором формате. Среди них есть обязательные (входят в базовую комплектацию ПК) и дополнительные устройства.
МОНИТОР
Монитор является необходимым устройством вывода информации. Монитор (или дисплей) позволяет отображать буквенно-цифровую или графическую информацию в форме, удобной для чтения и управления пользователем.
ПРИНТЕРЫ
Принтер — широко распространенное устройство для вывода информации на бумагу, его название образовано от английского глагола to print — печатать. Принтер не входит в базовую конфигурацию ПК.
ПРОЕКЦИОННАЯ ТЕХНОЛОГИЯ
Мультимедийные проекторы прочно вошли в нашу жизнь в конце 20 века, и сейчас без них невозможно представить многие сферы человеческой деятельности. Это учебный процесс, презентации, шоу-бизнес и домашний кинотеатр. Мультимедийный проектор позволяет воспроизводить на большом экране информацию, полученную с компьютера, видеомагнитофона, видеокамеры, фотоаппарата, DVD-плеера, игровой приставки.&lt;/p&gt;
&lt;h3 id=&#34;23-устройства-вводавывода&#34;&gt;2.3 Устройства ввода/вывода&lt;/h3&gt;
&lt;p&gt;Периферийные устройства вывода предназначены как для ввода, так и для вывода информации в необходимом оператору формате и бывают нескольких типов в зависимости от назначения.
Аудиогарнитура
Это и звуковое оборудование (устройство вывода), и микрофон (устройство ввода информации).
Гарнитура виртуальной реальности
Наголовное устройство, обеспечивающее пользователю виртуальную реальность. Виртуальная реальность — это сгенерированный компьютером мир, который полностью заменяет реальный, при этом пользователь может воздействовать на него, погружаясь, например, в видеоигру.&lt;/p&gt;
&lt;h3 id=&#34;24-запоминающие-устройства&#34;&gt;2.4 Запоминающие устройства&lt;/h3&gt;
&lt;p&gt;Флеш накопитель
Запоминающее устройство, которое использует флэш-память в качестве носителя и подключается к компьютеру или другому устройству чтения через интерфейс.
жесткий диск, жесткий диск
Запоминающее устройство (накопитель информации, накопитель) произвольного доступа, основанное на принципе магнитной записи. Это основной носитель информации в большинстве компьютеров.
флоппи-дисковод, флоппи-диск
Устройство для хранения небольших объемов информации, представляющее собой гибкую пластиковую пластину в защитной оболочке.
Используется для передачи данных с одного компьютера на другой.&lt;/p&gt;
&lt;h2 id=&#34;вывод&#34;&gt;Вывод&lt;/h2&gt;
&lt;p&gt;Подводя итоги моей работы, можно утверждать, что поставленная мною цель достигнута, а именно: исследованы виды периферийных устройств, способы их подключения к компьютеру; Также я узнал, как обеспечивается взаимодействие между устройствами компьютера и системой обработки информации или программами.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Схема аутентификации пользователей с использованием логинов и паролей</title>
      <link>https://aaandrievskaya.github.io/ru/project/project-1/</link>
      <pubDate>Sat, 28 May 2022 00:00:00 +0000</pubDate>
      <guid>https://aaandrievskaya.github.io/ru/project/project-1/</guid>
      <description>&lt;h2 id=&#34;введение&#34;&gt;Введение&lt;/h2&gt;
&lt;p&gt;Проблема достоверности идентификации личности в современных условиях волнует многих авторов, так как количество участников электронного взаимодействия в современном мире неуклонно растет. Аутентификация является основой для построения доверительных отношений между сторонами при их взаимодействии по открытым каналам связи, в связи с чем значимой становится роль аутентификации участников.&lt;/p&gt;
&lt;p&gt;Аутентификация — это процесс определения того, является ли кто-то (или что-то) тем, за кого он или она притворяется. В контексте ИТ-процессов это означает, что учетные данные, предоставленные лицом, запрашивающим доступ к ресурсу, сравниваются с данными, хранящимися в ресурсе. Если информация совпадает, пользователю предоставляется доступ. Как правило, процессы аутентификации связаны со следующими задачами: обеспечить авторизованный доступ, установить доверительные отношения при удаленном доступе, установить (идентифицировать) личность владельца электронной подписи и т.п.&lt;/p&gt;
&lt;h2 id=&#34;1-прототипы-аутентификации-по-паролю&#34;&gt;1. Прототипы аутентификации по паролю&lt;/h2&gt;
&lt;h3 id=&#34;11-голосовые-пароли&#34;&gt;1.1 Голосовые пароли&lt;/h3&gt;
&lt;p&gt;Речевые пароли нашли свое применение в связи с отсутствием каких-либо дополнительных средств установления принадлежности определенного лица к определенной группе лиц.
Например, в средневековой испанской армии были случаи, когда с наступлением темноты нервные солдаты случайно убивали одного из своих, приняв его за врага. Военачальники вскоре придумали средство для решения этой проблемы: каждый день они выбирали слово, которое в виде секретного сигнала служило бы тому, чтобы солдаты одной группы могли узнавать друг друга.&lt;/p&gt;
&lt;p&gt;Эта система сыграла незаменимую роль в годы Гражданской войны и Великой Отечественной войны, о чем свидетельствуют многочисленные исторические документы. Пароль и отзыв устанавливались в том числе и для ведения телеграфных переговоров по линии военных сообщений.&lt;/p&gt;
&lt;p&gt;Пароли и обзоры часто используются в агентурной разведке. Это заранее определенные фразы, по которым можно узнать разведчика или агента. Здесь словесный пароль является доказательством того, что разведчику (агенту) противостоял именно тот человек, с которым другой мог встречаться и работать.&lt;/p&gt;
&lt;p&gt;Пароль и ответ на него могут быть реальными. При этом встречающие могут иметь при себе заранее определенные и известные только им предметы, например, гребни, монеты, банкноты, которые могут быть одинаковыми или, наоборот, разными. При этом реальный пароль может быть самостоятельным или дополнять словесный пароль.&lt;/p&gt;
&lt;h3 id=&#34;12-замки&#34;&gt;1.2 Замки&lt;/h3&gt;
&lt;p&gt;Замок — это механическое, электрическое или электронное устройство, ограничивающее возможность несанкционированного использования чего-либо.&lt;/p&gt;
&lt;p&gt;Идея замков и ключей к ним возникла с появлением частной собственности, когда люди стали задумываться о том, как защитить ее от посягательств извне.&lt;/p&gt;
&lt;p&gt;Наличие общего ключа делало замки менее надежными, так как снижало степень защищенности. Специальные кодовые замки, открываемые набором букв или цифр на вращающихся дисках, появились в Европе в 17 веке. Использование кода блокировки было прототипом для введения современного пароля, и выбор кода был затруднен. Так, интерес представляет кодовый замок Eureka, запатентованный в США в 1862 году, в котором из-за большого количества различных букв и цифр количество возможных комбинаций на замке составляло 1 073 741 824.&lt;/p&gt;
&lt;p&gt;Проводя аналогию между кодом блокировки и компьютерным паролем, первый имеет преимущества и недостатки, аналогичные современному паролю. К достоинствам можно отнести отсутствие ключа, который можно потерять и который злоумышленник может скопировать в отсутствие владельца; возможность быстрой смены кода. Недостатки следующие: код можно забыть, но его запись увеличивает вероятность того, что код узнает посторонний; код можно подсмотреть при входе; часто в качестве кодов используются даты рождения, адреса, известные номера, что упрощает подбор кода.&lt;/p&gt;
&lt;p&gt;Разновидностью кодового замка является электронный замок. Электронный замок — это высокотехнологичное устройство, управляемое микропроцессором и используемое для запирания дверей. При наличии электронного замка решение о доступе лиц в помещение принимается на основании сигналов различных датчиков: считывателей магнитных карт, штрих-кодов, датчиков памяти контактов, биометрических датчиков, номеронабирателей, комбинаторных флуоресцентных молекулярных датчиков, дистанционное управление и т. д.
В будущем электронные замки могли бы составить конкуренцию молекулярным замкам, у которых есть датчик, реагирующий не на набор электрических сигналов от клавиатуры или считывателя, а на набор химических веществ.&lt;/p&gt;
&lt;h2 id=&#34;2-аутентификация-по-паролю&#34;&gt;2. Аутентификация по паролю&lt;/h2&gt;
&lt;p&gt;Появление компьютеров привело к необходимости защиты хранимой в них информации, а также создания механизмов контроля доступа к ней, основным компонентом которых стала аутентификация пользователя, одним из которых является пароль.
Фернандо Корбато, профессор Массачусетского технологического института, считается изобретателем компьютерных паролей. Использование паролей требовалось, говоря современным языком, для разграничения доступа нескольких пользователей к файлам одного компьютера. Установка пароля для каждого отдельного пользователя в качестве блокировки казалась очень простым решением. Поскольку ранее не было задокументировано использование системы безопасности при использовании компьютера, именно Корбато считается первым, кто поставил такую ​​систему на компьютер. С появлением персональных компьютеров в 1980-х гг. пароль стал неотъемлемой частью деловой жизни, а со временем и повседневной жизни. Следует отметить, что это же время считается самым ранним, когда была зафиксирована кража пароля. Эти ранние пароли были простыми и их было легко сохранить, поскольку сложных хакерских сетей и программ для взлома паролей еще не существовало.
Аутентификация по паролю в настоящее время является наиболее распространенным методом защиты информации. Аутентификация может проходить с использованием одноразовых и многоразовых паролей. Многоразовый пароль задается пользователем, и система сохраняет его в базе данных. Он одинаков для каждой сессии. К ним относятся PIN-коды, слова, цифры, графические ключи. Одноразовые пароли - разные для каждой сессии. Это может быть СМС с кодом.&lt;/p&gt;
&lt;h3 id=&#34;21-аутентификация-с-многоразовым-паролем&#34;&gt;2.1 Аутентификация с многоразовым паролем&lt;/h3&gt;
&lt;p&gt;Одним из способов аутентификации в компьютерной системе является ввод вашего идентификатора пользователя, в просторечии называемого «логином» (англ. login — имя пользователя, учетная запись), и пароля — некой конфиденциальной информации. Надежная (эталонная) пара логин-пароль хранится в специальной базе данных (рис. 1.).
Простая аутентификация имеет следующий общий алгоритм:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Субъект запрашивает доступ к системе и вводит личный идентификатор и пароль.&lt;/li&gt;
&lt;li&gt;Введенные уникальные данные отправляются на сервер аутентификации, где они сравниваются с эталонными данными.&lt;/li&gt;
&lt;li&gt;Если данные совпадают с эталонными, аутентификация считается успешной, при наличии расхождений субъект переходит на 1-й шаг
Введенный субъектом пароль может передаваться по сети двумя способами:
• Незашифровано, открыто, на основе протокола аутентификации по паролю (PAP).
• Использование шифрования SSL или TLS. В этом случае уникальные данные, введенные субъектом, безопасно передаются по сети.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;22-аутентификация-с-одноразовым-паролем&#34;&gt;2.2 Аутентификация с одноразовым паролем&lt;/h3&gt;
&lt;p&gt;Получив однажды многоразовый пароль субъекта, злоумышленник получает постоянный доступ к скомпрометированной конфиденциальной информации. Эта проблема решается использованием одноразовых паролей (OTP - One Time Password). Суть этого метода в том, что пароль действителен только для одного входа, при каждом последующем запросе доступа требуется новый пароль. Механизм аутентификации по одноразовым паролям может быть реализован как аппаратно (рис. 2.), так и программно.
Технологии использования одноразовых паролей можно разделить на:
• Использование общего для субъекта и системы генератора псевдослучайных чисел
• Использование временных меток в сочетании с универсальной системой времени.
• Использование базы случайных паролей, общих для субъекта и для системы
В первом методе используется генератор псевдослучайных чисел с одинаковым значением для субъекта и для системы. Сгенерированный субъектом пароль может передаваться в систему при последовательном использовании односторонней функции или при каждом новом запросе на основе уникальной информации из предыдущего запроса.
Второй метод использует временные метки. Примером такой технологии является SecurID. Он основан на использовании аппаратных ключей и синхронизации времени. Аутентификация основана на генерации случайных чисел через определенные промежутки времени. Уникальный секретный ключ хранится только в базе системы и в аппаратном устройстве субъекта. Когда субъект запрашивает доступ к системе, ему предлагается ввести помимо ПИН-кода от своей учетной записи случайно сгенерированное число, отображаемое в этот момент на аппаратном устройстве. Система сопоставляет введенный PIN-код и секретный ключ субъекта из своей базы данных и генерирует случайное число на основе параметров секретного ключа из базы данных и текущего времени. Далее проверяется идентичность сгенерированного номера и номера, введенного субъектом. Также проверяется время генерации номера на сервере и на аппаратном устройстве пользователя.
Третий способ основан на единой базе паролей субъекта и системы и высокоточной синхронизации между ними. При этом каждый пароль из набора можно использовать только один раз. Благодаря этому, даже если злоумышленник перехватит используемый субъектом пароль, он уже не будет действительным.
По сравнению с многоразовыми паролями одноразовые пароли обеспечивают более высокую степень безопасности.&lt;/p&gt;
&lt;h2 id=&#34;3-безопасность-системы&#34;&gt;3. Безопасность системы&lt;/h2&gt;
&lt;p&gt;Использование многоразовых паролей имеет ряд существенных недостатков. Во-первых, сам мастер-пароль или его хешированное изображение хранится на сервере аутентификации. Часто пароль хранится без криптографических преобразований, в системных файлах. Получив к ним доступ, злоумышленник может легко добраться до конфиденциальной информации. Во-вторых, субъект вынужден помнить (или записывать) свой многоразовый пароль. Злоумышленник может получить его, просто применив навыки социальной инженерии, без каких-либо технических средств. В-третьих, безопасность системы сильно снижается в случае, когда субъект сам выбирает себе пароль. Часто им оказывается какое-то слово или сочетание слов, присутствующих в словаре. В ГОСТ 28147-89 длина ключа составляет 256 бит (32 байта). При использовании генератора псевдослучайных чисел ключ имеет хорошие статистические свойства. Пароль, которым является, например, слово из словаря, может быть сокращен до псевдослучайного числа длиной 16 бит, что в 16 раз короче ключа ГОСТ. При наличии достаточного количества времени злоумышленник может взломать пароль с помощью простой атаки грубой силы. Решением этой проблемы является использование случайных паролей или ограничение времени действия пароля субъекта, по истечении которого пароль необходимо сменить.&lt;/p&gt;
&lt;h3 id=&#34;31-односторонние-функции&#34;&gt;3.1 Односторонние функции&lt;/h3&gt;
&lt;p&gt;С точки зрения наилучшей безопасности при хранении и передаче паролей следует использовать односторонние функции. Обычно для этих целей используются криптографически стойкие хеш-функции. В этом случае сервер хранит только образ пароля пользователя, который он ввел ранее. Получив пароль и сделав его хеш-преобразование, система сравнивает результат с хранящимся в ней эталонным изображением. Если они идентичны, пароли одинаковы. Для злоумышленника, получившего доступ к изображению, вычислить сам пароль практически невозможно, так как нет возможности «расшифровать» пароль. Найти его первоначальный вид на изображении можно только путем перебора.&lt;/p&gt;
&lt;h3 id=&#34;32-многофакторная-аутентификация&#34;&gt;3.2 Многофакторная аутентификация&lt;/h3&gt;
&lt;p&gt;Многофакторная аутентификация — это метод, при котором пользователю необходимо подтвердить двумя разными факторами, что он является владельцем учетной записи или что он входит в систему, чтобы получить доступ к учетной записи или подтвердить транзакцию со средствами.
Среди видов многофакторной аутентификации наиболее распространена двухфакторная аутентификация (2FA — 2-factor authentication) — метод, при котором пользователь должен предоставить два разных типа аутентификационных данных, чтобы получить доступ, например, что-то, известное только пользователя (пароль) и что-то присущее только пользователю (отпечаток пальца).
Доступ к ресурсам через ввод логина и пароля является однофакторной аутентификацией, так как для входа используется только один тип аутентификационных данных – пароль, известный пользователю.&lt;/p&gt;
&lt;h3 id=&#34;33-однофакторная-двухфакторная-аутентификация&#34;&gt;3.3 Однофакторная двухфакторная аутентификация&lt;/h3&gt;
&lt;p&gt;В связи с тем, что смартфоны стали неотъемлемой частью нашей жизни, они стали одним из способов подтверждения личности пользователя. Это токены для доступа к различным ресурсам. При этом одноразовый пароль генерируется либо с помощью специального приложения, либо приходит по смс — это самый простой способ для пользователя
Аутентификация проходит так:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Пользователь вводит логин и пароль, указанные при регистрации. Если эта пара верна, система отправляет одноразовый пароль с ограниченным сроком действия.&lt;/li&gt;
&lt;li&gt;Пользователь вводит одноразовый пароль и, если он совпадает с тем, что прислала система, пользователь получает доступ к своему счету, средствам или подтверждает денежный перевод.
Даже если злоумышленник получит логин и пароль от учетной записи (с помощью вредоносных программ, кражи блокнота с паролями, методов социальной инженерии и фишинга), после ввода этих данных система отправит одноразовый код с ограниченным сроком действия на связанный мобильный телефон пользователя. Без одноразового кода мошенник не сможет украсть деньги.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;вывод&#34;&gt;Вывод&lt;/h2&gt;
&lt;p&gt;Прослеживая историю появления замков и ключей к ним, а затем с появлением компьютеров - паролей, можно наблюдать, как людей всегда интересовала в первую очередь сохранность вещей, а с приходом информационного века и информации. Этот интерес привел к тому, что средства, позволяющие ограничить доступ к объекту сохранения, постоянно изменяются и усложняются. И всякий раз изобретатели, исследователи, ученые искали пути усовершенствования средств идентификации и аутентификации, что и происходит по сей день.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>День сурка</title>
      <link>https://aaandrievskaya.github.io/ru/post/how-was-my-week-3/</link>
      <pubDate>Sat, 21 May 2022 00:00:00 +0000</pubDate>
      <guid>https://aaandrievskaya.github.io/ru/post/how-was-my-week-3/</guid>
      <description>&lt;h2 id=&#34;так-и-жизнь-пролетит---не-заметишь&#34;&gt;Так и жизнь пролетит - не заметишь&lt;/h2&gt;
&lt;p&gt;В первую очередь отчитываюсь о состоянии ноги :) Она уже заживает, снова начинаю ходить, хотя и боюсь (а вдруг из-за стресса опять воспалится?).&lt;/p&gt;
&lt;p&gt;Во вторник меня выпишут, чему я несказанно рада. Наконец мои мучения закончатся. Я смогу погулять на свежем воздухе, смогу начать заниматься спортом, смогу ходить на все дополнительные занятия, которые еще не посещала.&lt;/p&gt;
&lt;p&gt;Кстати, об этом. 19 мая состоялся вокально-отчетный концерт, в котором я не смогла принять участие, хотя очень хотела. Словами не описать, как это неприятно, когда ты потратил столько времени на подготовку презентации своего творчества, но в силу обстоятельств не можешь себе этого позволить. На самом деле я мог бы рискнуть и выступить, но была большая вероятность снова травмировать лодыжку и я решил не рисковать.&lt;/p&gt;
&lt;p&gt;Что ж, надеюсь, совсем скоро моя жизнь перестанет быть похожей на День сурка и я снова буду полноценным человеком с интересной жизнью)&lt;/p&gt;
&lt;h2 id=&#34;my-social-networks&#34;&gt;My social networks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vk.com/grandryce&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;VK&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;grandryce_an&#34;&gt;&lt;strong&gt;Instagram&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Форматирование отчёта</title>
      <link>https://aaandrievskaya.github.io/ru/post/report-design/</link>
      <pubDate>Sat, 21 May 2022 00:00:00 +0000</pubDate>
      <guid>https://aaandrievskaya.github.io/ru/post/report-design/</guid>
      <description>&lt;h2 id=&#34;технические-правила&#34;&gt;Технические правила&lt;/h2&gt;
&lt;p&gt;Размер шрифта - не менее 12 пт.
Шрифт - Times New Roman. через полтора интервала.
Текст доклада должен быть напечатан со следующими полями:
слева - 30 мм,
справа - 15 мм,
верх и низ - 20 мм.
Абзацный отступ должен быть одинаковым по всему тексту доклада и равен 1,25 см.
Нумерация страниц арабскими цифрами сквозная (включая приложения), по центру внизу без точки. Специальный заголовок для титульного листа (без номера).
Заголовки структурных элементов располагаются посередине строки без точки в конце и печатаются ПРОПИСНЫМИ БУКВАМИ без подчеркивания. (РЕЗЮМЕ, ВВЕДЕНИЕ, ОСНОВНАЯ ЧАСТЬ и т.д.)
Каждый структурный элемент и каждый раздел основной части отчета начинается с новой страницы.
Основная часть отчета должна быть разбита на разделы, подразделы и параграфы. Разделы и подразделы отчета должны иметь заголовки. Заголовки разделов и подразделов основной части отчета должны начинаться с абзацного отступа и помещаться после порядкового номера, печататься ПРОПИСНЫМИ БУКВАМИ, жирным шрифтом, без подчеркивания, без точки в конце. Абзацы и подпункты могут иметь только порядковый номер без заголовка, начиная с отступа абзаца.&lt;/p&gt;
&lt;p&gt;##Образец нумерации заголовков разделов и подразделов&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3 ПРИНЦИПЫ, МЕТОДЫ И РЕЗУЛЬТАТЫ РАЗРАБОТКИ И ПОДДЕРЖАНИЯ СИСТЕМ КЛАССИФИКАЦИИ VINITI&lt;/strong&gt;
&lt;strong&gt;3.1 РУБРИКАТОР ВИНИТИ&lt;/strong&gt;
&lt;strong&gt;3.1.1 УСТРОЙСТВО И ФУНКЦИИ РУБРИКАТОРА&lt;/strong&gt;
&lt;strong&gt;3.1.2 ОТНОШЕНИЯ РУБРИКАТОРА VINITIA GRNTI&lt;/strong&gt;
&lt;strong&gt;3.1.3 МЕСТО РУБРИКАТОРА ОТРАСЛИ ЗНАНИЙ В СИСТЕМЕ РУБРИКАЦИИ VINITI&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;структурные-элементы-отчета&#34;&gt;Структурные элементы отчета&lt;/h2&gt;
&lt;p&gt;• ТИТУЛЬНЫЙ ЛИСТ
• СПИСОК ИСПОЛНИТЕЛЕЙ (если отчет составляется одним исполнителем, на титульном листе отчета указываются его должность, ученая степень, ученое звание, фамилия и инициалы. В этом случае структурный элемент отчета «СПИСОК ИСПОЛНИТЕЛЕЙ&amp;quot; не оформляется)
• СОДЕРЖАНИЕ
• ПОНЯТИЯ И ОПРЕДЕЛЕНИЯ
• СПИСОК СОКРАЩЕНИЙ И СИМВОЛОВ
• ВВЕДЕНИЕ
• ОСНОВНАЯ ЧАСТЬ ОТЧЕТА
• ВЫВОД
• СПИСОК ИСПОЛЬЗУЕМЫХ ИСТОЧНИКОВ
• ПРИЛОЖЕНИЕ&lt;/p&gt;
&lt;h2 id=&#34;введение&#34;&gt;Введение&lt;/h2&gt;
&lt;p&gt;Введение является прологом всего исследования, в нем представлена ​​его модель. Здесь изложен весь научный аппарат, которым руководствуется исследователь, производящий поисковую работу. На его основе научный руководитель анализирует качество выполнения реферата, курсовой или дипломной работы и оценивает: насколько глубоко осознана и понята актуальность темы, достигнута ли цель, правильно ли выбраны методы исследования правильно ли они использовались и т. д.&lt;/p&gt;
&lt;p&gt;Композиция Введения представляет собой описание научного аппарата, которое зависит от того, какая работа ведется. Если пишется реферат, то во Введении будет описана актуальность темы, цель реферата, предмет и методы исследования. Если это курсовая работа, то во Введение, помимо тех компонентов, которые входят в реферат, будет также входить описание объекта и задач исследования. В диссертации описывается весь научный аппарат. Так студент от работы к работе постепенно осваивает технологию проектирования научных исследований в доступных ему формах.&lt;/p&gt;
&lt;p&gt;Объем введения составляет примерно 1/10 часть всего объема работы, то есть конкретного текста реферата, курсовой или дипломной работы. Место введения - находится сразу после оглавления перед основной частью.&lt;/p&gt;
&lt;p&gt;Требования к написанию введения:&lt;/p&gt;
&lt;p&gt;а) введение печатается на отдельных страницах;&lt;/p&gt;
&lt;p&gt;б) не нумеруется ни в оглавлении, ни в тексте, а идет как самостоятельная часть работы;&lt;/p&gt;
&lt;p&gt;в) все компоненты научного аппарата выделены шрифтом или подчеркнуты;&lt;/p&gt;
&lt;p&gt;г) каждый компонент пишется с новой строки.&lt;/p&gt;
&lt;p&gt;Например:&lt;/p&gt;
&lt;p&gt;Актуальность исследования определяется тем, что…;&lt;/p&gt;
&lt;p&gt;Цель исследования - разработать комплекс методов&amp;hellip;;&lt;/p&gt;
&lt;p&gt;Предметом исследования являются методы воспитания наблюдательности&amp;hellip;&lt;/p&gt;
&lt;p&gt;При написании Введения рекомендуем обратить особое внимание на актуальность темы исследования. Это, по сути, патентно-исследовательская работа по поиску государственного или регионального заказа на вашу тему, определение места темы в научном мире, по отношению к практике.&lt;/p&gt;
&lt;p&gt;Будьте бдительны - чтение Введения начинается с оценки вашей работы. Вступление читают все, особенно противники. По ее качеству судят обо всей работе, уровне профессиональной подготовки, ответственности, умении планировать свою работу и выполнять ее вдумчиво и многих других качествах специалиста.&lt;/p&gt;
&lt;h2 id=&#34;основная-часть&#34;&gt;Основная часть&lt;/h2&gt;
&lt;p&gt;«Основная часть» - условное название описания всего исследования, то есть содержательной части реферата, курсовой или дипломной работы. Это то, что строится на базе проектируемого научного аппарата. Здесь все должно быть подчинено достижению цели преобразования предмета исследования выбранными вами методами. Все, что было задумано и описано во введении, здесь начинает «работать».&lt;/p&gt;
&lt;p&gt;Для написания основной части составляется план текста в виде перечня основных положений, подлежащих раскрытию. Любой план письменного текста состоит из глав, абзацев и подпунктов. Их количество зависит от объема материала и характера текста, особенностей учебной дисциплины, в рамках и на основе которой выполняется работа. Общее требование состоит в том, чтобы они были пропорциональны друг другу по объему и степени сложности содержания. Кроме того, количество абзацев в главах и подпунктов в абзацах непременно должно быть не менее двух. Глава не может состоять из одного абзаца, а абзац из одного подпункта.&lt;/p&gt;
&lt;p&gt;Названия (заголовки) глав, пунктов и подпунктов могут не совпадать друг с другом или с темой. Слова «Основная часть» не включены ни в один из заголовков, так как это условное название всего текста по его назначению в работе. Названия всех глав, параграфов и подпунктов построены содержательно, отражая раскрытые в них идеи. Их цель – направить внимание как писателя, так и читателя на конкретную мысль, конкретный материал.&lt;/p&gt;
&lt;p&gt;Построение основной части реферата зависит от его объема, особенностей содержания и цели. Чаще всего в реферате нет глав, а есть только параграфы без дальнейшего деления на подпункты. Реферат может вообще не иметь деления на части, а выполняться как целостное произведение, но с внутренней логикой изложения содержания. Абзацы, выделенные в аннотации, не имеют общего заголовка, таковой для них является тема аннотации, которая находится на титульном листе.&lt;/p&gt;
&lt;p&gt;Построение основной части курсовой работы более подробно, чем реферата. Он содержит не менее двух глав. Главы разбиты на параграфы. Подпункты здесь почти не используются. Каждая глава имеет свое собственное осмысленное название, как и каждый абзац. Если содержание глав нельзя разделить на абзацы, то главы упрощаются до абзацев, то есть вообще не вводятся. Как правило, курсовые работы делятся на две главы - теоретическую и эмпирическую, посвященную либо обобщению опыта работы, либо небольшому эксперименту. Курсовую работу можно написать только на теоретическом или только на эмпирическом материале. Это зависит от темы, от целей и задач, а также от научного руководителя. Напомним, что теоретическая часть работы не может носить такие названия, как «Основная часть», «Теоретическая часть» или «Обзор литературы». Его заголовки сформулированы содержательно, проблемно в соответствии с конкретной темой и методами работы над теорией.&lt;/p&gt;
&lt;p&gt;Построение основной части диссертации еще сложнее. Дипломная работа может состоять из большего количества глав, например, из четырех. Первая глава, как правило, посвящена теоретическим вопросам, вторая — описанию программы эксперимента, третья — проведению эксперимента и обсуждению его результатов, четвертая — разработке методических рекомендаций. Возможно сочетание второй и третьей глав. Возможно отсутствие четвертой главы. Все зависит опять же от особенностей темы, целей и задач, выбранных методов и рекомендаций научного руководителя.&lt;/p&gt;
&lt;p&gt;В дипломной работе каждая глава заканчивается специальным разделом, не имеющим собственной нумерации, а именно - Выводами по главе. Эти выводы обобщают материал, изложенный в параграфах главы, и позволяют получить новые выводы, отличные от уже известных в науке, или подтвердить их на новом исследовательском материале. Выводы главы представляют собой последовательность утверждений, состоящую из предпосылок и ранее доказанных утверждений. Это соблюдает логический закон достаточного основания, согласно которому каждое суждение должно быть оправдано другими, истинность которого доказана вами или кем-то другим. Выводы по главам можно делать индуктивно и дедуктивно. Требования к выводам по главам: системность, соответствие содержанию главы и новизна.&lt;/p&gt;
&lt;h2 id=&#34;вывод&#34;&gt;Вывод&lt;/h2&gt;
&lt;p&gt;Каждое исследование имеет Заключение как эпилог работы, как ее заключительную часть. Цель Заключения – показать, что цель, поставленная перед исследованием, достигнута, а гипотеза доказана.&lt;/p&gt;
&lt;p&gt;Виды заключения: резюме, выводы и само заключение. Резюме – это краткое описание проделанной работы, выполненное в виде перечня проделанного и выводов по главам. Чаще всего используется в ссылках. Выводы — это уже новые суждения, вернее выводы, сделанные на материале теории или эмпирики. В выводах теоретический или эмпирический материал служит лишь основой для новых идей, суждений, положений, рекомендаций. Чаще всего выводы делаются там, где авторы статей имеют собственные суждения и применяют различные методы анализа научных работ и практики. Заключение представляет собой сложную форму завершения исследования, включающую в себя как резюме, так и выводы. Кроме того, в Заключение включена оценка теоретической и практической значимости работы, которая может выходить за рамки темы.&lt;/p&gt;
&lt;p&gt;Выбор типа Заключения зависит от:&lt;/p&gt;
&lt;p&gt;сложность работы (для реферата достаточно реферата, для курсовой – заключения, а для диплома – заключения);
от характера содержания работы, т. е. от того, какие приемы работы с ней применялись: чем сложнее приемы и чем меньше составляющая работа, тем целесообразнее выбирать выводы и даже заключение;
владение автором технологией выполнения этих видов завершения своего исследования.
Построение Заключения зависит от выбранного представления. В наиболее законченном виде он построен примерно по такому плану:&lt;/p&gt;
&lt;p&gt;заявление о достижении цели исследования и доказательства;
гипотезы с краткими подтверждениями;
резюме как кратчайший обзор проделанной работы;
новые положения (идеи, суждения, оценки), полученные в результате исследования;
определение научной новизны выполненной работы;
определение практической значимости проделанной работы.
По стилю написания Заключение должно быть кратким, четким, логичным, доказательным, убедительным. Необходимо помнить, что как научный руководитель, так и оппоненты, дающие отзыв о работе, наиболее внимательно относятся к ней, как и к Введению.&lt;/p&gt;
&lt;p&gt;Объем Заключения определяется характером работы. Но есть условный стандарт. Как и Введение, ему отводится не более 1/10 всего текста.&lt;/p&gt;
&lt;h2 id=&#34;список-используемых-источников&#34;&gt;Список используемых источников&lt;/h2&gt;
&lt;p&gt;Список литературы завершает описание исследования. Часто его называют библиографией, что неверно. Список литературы следует за Заключением и составляется с новой страницы.&lt;/p&gt;
&lt;p&gt;Количество литературы, включаемой в Перечень, зависит от формы научно-исследовательской работы. Для реферата норма не менее 5 работ, для курсовой работы – не менее 10, для дипломной работы – не менее 25.&lt;/p&gt;
&lt;p&gt;Литература, включенная в Перечень, представляет собой опубликованные теоретические источники, юридические документы, а также архивные материалы. Сюда можно вносить рукописные материалы с пометкой «Рукопись». Включается не только цитируемая литература, но и прочитанная литература, имеющая непосредственное отношение к изучаемой теме. Все авторы и их работы, указанные в тексте, должны быть включены в этот список, особенно цитируемые работы.&lt;/p&gt;
&lt;p&gt;Список литературы должен включать работы по изучению вашей темы преподавателей, психологов, социологов, историков, философов и других специалистов, работающих в вашем вузе. Вы призваны внести свой вклад в развитие науки в вашей альма-матер.&lt;/p&gt;
&lt;p&gt;Вся литература оформляется строго в алфавитном порядке, по первой букве фамилии автора или по первой букве названия документа или коллективного произведения, не имеющего строгого авторства. Каждой работе присваивается свой порядковый номер, который затем указывается в тексте работы при цитировании.&lt;/p&gt;
&lt;p&gt;Каждый источник, включенный в Список литературы, имеет специфическое оформление. Помимо фамилии автора и названия работы указываются выходные данные. К ним относятся: место издания, название издательства или организации, опубликовавшей произведение, и год издания. Кроме того, указывается количество страниц в тексте.&lt;/p&gt;
&lt;p&gt;Литература оформляется строго с учетом требований ГОСТ.&lt;/p&gt;
&lt;h2 id=&#34;приложение&#34;&gt;Приложение&lt;/h2&gt;
&lt;p&gt;Приложение представляет собой материал, уточняющий, иллюстрирующий, подтверждающий отдельные положения вашего исследования и не входящий в текст основной части. Оно имеет дополнительное значение. Приложение, как правило, используется в дипломных и реже в авторефератах и ​​курсовых работах, его состав определяется замыслом исследователя.&lt;/p&gt;
&lt;p&gt;Виды приложений: копии планов и программ, фотографии, тексты тестов и анкет, образцы детских рисунков и сочинений, отчеты, отчеты, документы или выписки из них, уставы, положения и т.п.&lt;/p&gt;
&lt;p&gt;Как правило, Заявки оформляются только в том случае, если их не менее двух. Для одного приложения он не вводится. Объем каждого приложения не может превышать пяти страниц.&lt;/p&gt;
&lt;p&gt;В Приложение включены только те материалы, на которые есть ссылки в Основном тексте. Связь основного текста и Приложения обязательна.&lt;/p&gt;
&lt;p&gt;Каждое приложение имеет свой номер (без указания знака №), размещается в конце работы с продолжением общей нумерации страниц. Приложения располагаются в порядке упоминания о них в тексте работы (см. любое приложение к этой книге).&lt;/p&gt;
&lt;p&gt;Каждое Заявление оформляется отдельно. В правом углу первой страницы написано: «Приложение 1», «Приложение 2» и т. д.&lt;/p&gt;
&lt;p&gt;Статистические таблицы, схемы опытов в Приложение не включены, они включены непосредственно в текст.&lt;/p&gt;
&lt;p&gt;The total volume of the Appendix should not exceed one third of the volume of the entire text of the work.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Markdown language.</title>
      <link>https://aaandrievskaya.github.io/ru/post/markdown-language/</link>
      <pubDate>Sat, 14 May 2022 00:00:00 +0000</pubDate>
      <guid>https://aaandrievskaya.github.io/ru/post/markdown-language/</guid>
      <description>&lt;h2 id=&#34;определение&#34;&gt;Определение&lt;/h2&gt;
&lt;p&gt;Markdown — это простой язык разметки, используемый для создания форматированного текста (например, HTML) с помощью текстового редактора. Это позволяет вам добавлять базовое форматирование к тексту, используя символы, известные и доступные на всех клавиатурах. Размер шрифта, цвет и другие дополнительные параметры недоступны в Markdown.&lt;/p&gt;
&lt;h2 id=&#34;синтаксис-уценки&#34;&gt;Синтаксис уценки&lt;/h2&gt;
&lt;p&gt;Это краткий справочник по основным элементам синтаксиса Markdown. Единого стандарта не существует, и разные версии Markdown могут отличаться в деталях. Но основные элементы из списка ниже поддерживаются во всех стандартах.&lt;/p&gt;
&lt;h2 id=&#34;выбор-текста&#34;&gt;Выбор текста&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Этот текст будет выделен курсивом&lt;/em&gt;
&lt;em&gt;Этот текст будет выделен курсивом (курсивом)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Этот текст будет выделен жирным шрифтом&lt;/strong&gt;
&lt;strong&gt;Этот текст будет выделен полужирным шрифтом&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Вы можете &lt;strong&gt;вставлять&lt;/strong&gt; один тип в другой&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;названия&#34;&gt;Названия&lt;/h2&gt;
&lt;p&gt;&amp;lsquo;# Это самый большой заголовок, он превращается в тег &lt;h1&gt;
&amp;lsquo;## &lt;h2&gt;
&amp;lsquo;### &lt;h3&gt;
&amp;lsquo;#### &lt;h4&gt;
&amp;lsquo;##### &lt;h5&gt;
&amp;lsquo;###### &lt;h6&gt;&lt;/p&gt;
&lt;p&gt;В Markdown заголовки пишутся без символа &#39;&lt;/p&gt;
&lt;h2 id=&#34;ссылки&#34;&gt;Ссылки&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://hexlet.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://hexlet.io&lt;/a&gt; - текст простой ссылки автоматически станет кликабельной
Любой текст можно сделать ссылкой:&lt;/p&gt;
&lt;p&gt;[Это ссылка Hexlet] (&lt;a href=&#34;https://hexlet.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://hexlet.io&lt;/a&gt;)&lt;/p&gt;
&lt;h2 id=&#34;цитировать&#34;&gt;Цитировать&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Это мудрая цитата
мудрец.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;картинки&#34;&gt;Картинки&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://aaandrievskaya.github.io/assets/images/markdown/markdown.png&#34; alt=&#34;Это необязательный альтернативный текст&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;код&#34;&gt;Код&lt;/h2&gt;
&lt;p&gt;Для выделения кода (или любого неформатированного текста) используются специальные символы — обратные галочки: `&lt;/p&gt;
&lt;p&gt;Иногда вам нужно добавить фрагмент кода &lt;code&gt;function(12);&lt;/code&gt; к обычной строке текста.
А иногда нужно вставить целый блок кода:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;константная&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;функция&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;число&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;если&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;число&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;число&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;возврата&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;вернуть&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;число&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;списки&#34;&gt;Списки&lt;/h2&gt;
&lt;p&gt;Ненумерованный список:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Параграф
*Еще один пункт
&lt;ul&gt;
&lt;li&gt;Подпункт&lt;/li&gt;
&lt;li&gt;Еще один подпункт
Нумерованный список:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;Пункт&lt;/li&gt;
&lt;li&gt;Еще один момент&lt;/li&gt;
&lt;li&gt;Подпункт&lt;/li&gt;
&lt;li&gt;Еще один подпункт
Вы можете использовать любые числа в нумерованном списке - это не имеет значения. При преобразовании в HTML или другой формат числа станут правильными и непротиворечивыми (1, 2, 3 и т. д.).&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Каникулы дома</title>
      <link>https://aaandrievskaya.github.io/ru/post/how-was-my-week-2/</link>
      <pubDate>Sat, 14 May 2022 00:00:00 +0000</pubDate>
      <guid>https://aaandrievskaya.github.io/ru/post/how-was-my-week-2/</guid>
      <description>&lt;h2 id=&#34;я-не-могла-вообразить-такое&#34;&gt;Я не могла вообразить такое&lt;/h2&gt;
&lt;p&gt;Ну, я расскажу вам все по порядку.
Моя лодыжка уже начала заживать. Я уже могла ходить самостоятельно, даже выходить на улицу в магазин. «Как же я счастлив, — подумал я про себя.&lt;/p&gt;
&lt;p&gt;Так прошла большая часть недели. Очень хотелось попасть на парад, посвященный Дню Победы. и на майские праздники погулять, но я себе этого не позволяла, так как была не совсем здорова.&lt;/p&gt;
&lt;p&gt;«Выписка в пятницу, с понедельника я наконец-то буду полноценным человеком», — мечтала я про себя. Но моим планам не суждено было сбыться, снова начала болеть нога, я снова не могу позволить себе ходить.&lt;/p&gt;
&lt;p&gt;В пятницу мой доктор был очень зол. Он считает, что я не хочу выздоравливать, поэтому специально нагрузил ногу и продлил болезнь. Но это неправда, я действительно не думал, что могу повредить зажившие связки, если немного погуляю. Я даже не пострадал&amp;hellip;&lt;/p&gt;
&lt;p&gt;Мне продлили больничный еще на 10 дней, а я сижу дома, как в тюрьме. Хотя, пожалуй, это и к лучшему, ведь у меня было достаточно времени, чтобы посмотреть все серии и пройти все игры, которые я оставил на каникулы&amp;hellip; :)&lt;/p&gt;
&lt;h2 id=&#34;my-social-networks&#34;&gt;My social networks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vk.com/grandryce&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;VK&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;grandryce_an&#34;&gt;&lt;strong&gt;Instagram&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>В жизни бывают разочарования</title>
      <link>https://aaandrievskaya.github.io/ru/post/%D0%BDow-was-my-week/</link>
      <pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate>
      <guid>https://aaandrievskaya.github.io/ru/post/%D0%BDow-was-my-week/</guid>
      <description>&lt;h2 id=&#34;такова-жизнь&#34;&gt;Такова жизнь&lt;/h2&gt;
&lt;p&gt;Так что, больше не буду тянуть и рассказать вам, что произошло. В среду я торопился домой, так как было уже довольно поздно. Я споткнулся и подвернул ногу. Меня это не задело и в тот момент я не придал этому значения. Однако уже в пятницу нога сильно распухла и ходить было невозможно.
Пришлось ехать в травмпункт и объяснять ситуацию. Об поступлении в университет, конечно же, не могло быть и речи. Мне оформили больничный и теперь я сижу дома, вдали от всех интересных событий&amp;hellip;&lt;/p&gt;
&lt;p&gt;Впрочем, возможно, это и к лучшему. За это время я вдоволь соскучусь по всем своим друзьям и будет вдвойне радостно снова их увидеть! Кроме того, с этого момента я буду гораздо точнее, потому что я больше не хочу испытывать это на себе.&lt;/p&gt;
&lt;p&gt;Сейчас моя нога уже чувствует себя намного лучше и постепенно сходит на нет, так что можете не волноваться, я обязательно вернусь в строй!!!)&lt;/p&gt;
&lt;h2 id=&#34;my-social-networks&#34;&gt;My social networks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vk.com/grandryce&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;VK&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;grandryce_an&#34;&gt;&lt;strong&gt;Instagram&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Управление версиями. Гит</title>
      <link>https://aaandrievskaya.github.io/ru/post/version-control.-git/</link>
      <pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate>
      <guid>https://aaandrievskaya.github.io/ru/post/version-control.-git/</guid>
      <description>&lt;h2 id=&#34;version-control-systems-general-concepts&#34;&gt;Version control systems. General concepts&lt;/h2&gt;
&lt;p&gt;Version control systems (VCS) are used when several people work on the same project. Usually the main project tree is stored in the local
or a remote repository to which access is configured for project members. At
making changes to the content of the project, the version control system allows them to
fix, combine changes made by different project participants,
rollback to any earlier version of the project, if required.
Classical version control systems use a centralized model,
assuming a single repository for storing files. Most of the version control functions are performed by a dedicated server.
The project participant (user) before starting work through certain
command gets the version of files it needs. After making changes, the user
commits the new version to the repository. This does not remove previous versions.
from the central repository and you can return to them at any time. The server can
save not the full version of the changed files, but produce the so-called delta compression - save only changes between successive versions, which
allows you to reduce the amount of stored data.
Version control systems support traceability and resolution
conflicts that may arise when several people work on one
file. You can merge (merge) the changes made by different participants (automatically or manually), manually select the desired version, undo the changes altogether
or lock files for modification. Depending on the settings, blocking is not
allows other users to get a working copy or prevents modification
working copy of the file by means of the OS file system, thus providing
privileged access to only one user working with the file.
Version control systems can also provide additional, more flexible
functionality. For example, they can support working with multiple versions of the same file, keeping a common history of changes up to the branch point.
versions and each branch&amp;rsquo;s own change histories. In addition, it is usually available
information about which of the participants, when and what changes were made. Usually this
kind of information is stored in the change log, access to which can be restricted.
Unlike classical ones, in distributed version control systems, the central
the repository is optional.
Among the classic VCS, CVS, Subversion are the most famous, and among the distributed ones - Git, Bazaar, Mercurial. The principles of their work are similar, they differ mainly
the syntax of the commands used in the work.&lt;/p&gt;
&lt;h2 id=&#34;basic-git-commands&#34;&gt;Basic git commands&lt;/h2&gt;
&lt;p&gt;The most commonly used git commands are:
– creating the main repository tree:&lt;/p&gt;
&lt;p&gt;1 git init&lt;/p&gt;
&lt;p&gt;– receiving updates (changes) of the current tree from the central repository:&lt;/p&gt;
&lt;p&gt;1 git pull&lt;/p&gt;
&lt;p&gt;– sending all the changes made to the local tree to the central repository:&lt;/p&gt;
&lt;p&gt;1 git push&lt;/p&gt;
&lt;p&gt;– view the list of changed files in the current directory:&lt;/p&gt;
&lt;p&gt;1 git status&lt;/p&gt;
&lt;p&gt;– view current changes:&lt;/p&gt;
&lt;p&gt;1 git diff&lt;/p&gt;
&lt;p&gt;– saving current changes:
– add all modified and/or created files and/or directories:&lt;/p&gt;
&lt;p&gt;1 git add .&lt;/p&gt;
&lt;p&gt;– add specific modified and/or created files and/or directories:&lt;/p&gt;
&lt;p&gt;1 git add filenames&lt;/p&gt;
&lt;p&gt;– delete a file and/or directory from the repository index (in this case, the file and/or directory
remains in the local directory):&lt;/p&gt;
&lt;p&gt;1 git rm filenames&lt;/p&gt;
&lt;p&gt;– saving the added changes:
– save all added changes and all modified files:&lt;/p&gt;
&lt;p&gt;1 git commit -am &amp;lsquo;Commit description&amp;rsquo;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;save the added changes with a comment through the built-in
editor:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1 git commit&lt;/p&gt;
&lt;p&gt;– creating a new branch based on the current one:&lt;/p&gt;
&lt;p&gt;1 git checkout -b branchname&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;switch to some branch:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1 git checkout branch_name&lt;/p&gt;
&lt;p&gt;(when you switch to a branch that is not yet in the local repository, it will be
created and linked to the remote)
– pushing changes of a specific branch to the central repository:&lt;/p&gt;
&lt;p&gt;1 git push origin branchname&lt;/p&gt;
&lt;p&gt;– merge the branch with the current tree:&lt;/p&gt;
&lt;p&gt;1 git merge &amp;ndash;no-ff branchname&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;deleting a branch:
– deleting a local branch already merged with the main tree:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1 git branch -d branchname&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;forced deletion of the local branch:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1 git branch -D branchname&lt;/p&gt;
&lt;p&gt;– deleting a branch from the central repository:&lt;/p&gt;
&lt;p&gt;1 git push origin :branchname&lt;/p&gt;
&lt;h2 id=&#34;standard-operating-procedures-for-a-central-repository&#34;&gt;Standard Operating Procedures for a Central Repository&lt;/h2&gt;
&lt;p&gt;The work of the user with his branch begins with checking and receiving changes
from the central repository (at the same time, to the local tree before starting this procedure
should not be changed):&lt;/p&gt;
&lt;p&gt;1 git checkout master
2 git-pull
3 git checkout -b branchname&lt;/p&gt;
&lt;p&gt;You can then make changes in the local tree and/or branch.
After the completion of making some change to the files and / or directories of the project
you need to place them in the central repository. To do this, you need to check,
which files have changed so far:&lt;/p&gt;
&lt;p&gt;1 git status&lt;/p&gt;
&lt;p&gt;and, if necessary, delete unnecessary files that we do not want to send to the central repository.
Then it is useful to review the text of the changes for compliance with the rules for maintaining clean commits:&lt;/p&gt;
&lt;p&gt;1 git diff&lt;/p&gt;
&lt;p&gt;If some files should not be included in the commit, then we mark only those files that
whose changes you want to save. To do this, use the commands add and/or
deletion with the necessary options:&lt;/p&gt;
&lt;p&gt;1 git add &amp;hellip;
2 git rm &amp;hellip;&lt;/p&gt;
&lt;p&gt;If you want to save all changes in the current directory, then use:&lt;/p&gt;
&lt;p&gt;1 git add .&lt;/p&gt;
&lt;p&gt;Then we save the changes, explaining what was done:&lt;/p&gt;
&lt;p&gt;1 git commit -am &amp;ldquo;Some commit message&amp;rdquo;&lt;/p&gt;
&lt;p&gt;and send it to the central repository:&lt;/p&gt;
&lt;p&gt;1 git push origin branchname
or
1 git push&lt;/p&gt;
&lt;h2 id=&#34;working-with-a-local-repository&#34;&gt;Working with a local repository&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s create a local repository.
First, let&amp;rsquo;s make a preliminary configuration by specifying the name and email of the owner of the repository:&lt;/p&gt;
&lt;p&gt;1 git config &amp;ndash;global user.name &amp;ldquo;FirstName LastName&amp;rdquo;
2 git config &amp;ndash;global user.email &amp;ldquo;work@mail&amp;rdquo;&lt;/p&gt;
&lt;p&gt;and setting utf-8 in git output:&lt;/p&gt;
&lt;p&gt;1 git config &amp;ndash;global quotepath false&lt;/p&gt;
&lt;p&gt;To initialize a local repository located, for example, in a directory
~/tutorial must be typed on the command line:&lt;/p&gt;
&lt;p&gt;1 cd
2 mkdir tutorial
3 cd tutorial
4 git init&lt;/p&gt;
&lt;p&gt;After that, a .git directory will appear in the tutorial directory, in which it will be stored
change history.
Let&amp;rsquo;s create a test text file hello.txt and add it to the local repository:&lt;/p&gt;
&lt;p&gt;1 echo &amp;lsquo;hello world&amp;rsquo; &amp;gt; hello.txt
2 git add hello.txt
3 git commit -am &amp;lsquo;New file&amp;rsquo;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s use the status command to view the changes in the working directory since the last revision:&lt;/p&gt;
&lt;p&gt;1 git status&lt;/p&gt;
&lt;p&gt;While working on a project, one way or another, files can be created that are not
needs to be added to the repository later. For example, temporary files created by editors or object files created by compilers. Can prescribe templates of file types ignored when adding to the repository in the file .gitignore with services. To do this, you first need to get a list of available
templates:&lt;/p&gt;
&lt;p&gt;curl -L -s &lt;a href=&#34;https://www.gitignore.io/api/list&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.gitignore.io/api/list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then download the template, for example, for C and C++&lt;/p&gt;
&lt;p&gt;curl -L -s &lt;a href=&#34;https://www.gitignore.io/api/c&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.gitignore.io/api/c&lt;/a&gt; &amp;raquo; .gitignore
curl -L -s &lt;a href=&#34;https://www.gitignore.io/api/c&amp;#43;&amp;#43;&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.gitignore.io/api/c++&lt;/a&gt; &amp;raquo; .gitignore&lt;/p&gt;
&lt;h2 id=&#34;working-with-the-repository-server&#34;&gt;Working with the repository server&lt;/h2&gt;
&lt;p&gt;For subsequent user identification on the repository server, it is necessary
generate a key pair (private and public):&lt;/p&gt;
&lt;p&gt;1 ssh-keygen -C &amp;ldquo;First Name Last Name &lt;a href=&#34;mailto:work@mail&#34;&gt;work@mail&lt;/a&gt;&amp;rdquo;&lt;/p&gt;
&lt;p&gt;The keys are stored in the ~/.ssh/ directory.
There are several repository servers available with the option of free
data placement. For example, &lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/&lt;/a&gt;.
To work with it, you must first create an account on the website &lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/&lt;/a&gt;. Then you need to upload the public key we generated earlier. For
To do this, go to &lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/&lt;/a&gt; under your account and go to the GitHub setting menu. After that, select SSH keys in the GitHub setting side menu and click
the Add Key button. By copying the key from the local console to the clipboard&lt;/p&gt;
&lt;p&gt;1 cat ~/.ssh/id_rsa.pub | xclip -sel clip&lt;/p&gt;
&lt;p&gt;paste the key into the field that appears on the site.
After that, you can create a repository on the site by selecting Repositories from the menu
Create a repository, give it a name and make it public (public).
To download the repository from the local directory to the server, execute the following
commands:&lt;/p&gt;
&lt;p&gt;1 git remote add origin
2 ssh://git@github.com/&lt;username&gt;/&lt;reponame&gt;.git
3 git push -u origin master&lt;/p&gt;
&lt;p&gt;Further, on the local computer, you can perform standard procedures for working
with git if there is a central repository.&lt;/p&gt;
&lt;h2 id=&#34;general-information&#34;&gt;General information&lt;/h2&gt;
&lt;p&gt;– Gitflow Workflow published and popularized by Vincent Driessen of Gitflow
vie.
– Gitflow Workflow involves building a strict branching model, taking into account
project release.
– This model is great for organizing a release-based workflow.
– Working on the Gitflow model includes creating a separate branch for bug fixes
in the working environment.
– The sequence of actions when working on the Gitflow model:
– The develop branch is created from the master branch.
– A release branch is created from the develop branch.
– Feature branches are created from the develop branch.
– When work on the feature branch is completed, it is merged into the develop branch.
– When work on a release branch is completed, it is merged into branches
develop and master.
– If a problem is found in master, a hotfix branch is created from master.
– When a hotfix branch is completed, it is merged into branches
develop and master.&lt;/p&gt;
&lt;h2 id=&#34;software-installation&#34;&gt;Software installation&lt;/h2&gt;
&lt;p&gt;– For Windows, the Chocolatey package manager is used. Git-flow is included
git package.&lt;/p&gt;
&lt;p&gt;1 choco install git&lt;/p&gt;
&lt;p&gt;– For MacOS, use the Homebrew package manager.&lt;/p&gt;
&lt;p&gt;1 brew install git-flow&lt;/p&gt;
&lt;p&gt;– Linux
– Gentoo&lt;/p&gt;
&lt;p&gt;1 emerge dev-vcs/git-flow&lt;/p&gt;
&lt;p&gt;– Ubuntu&lt;/p&gt;
&lt;p&gt;1 apt-get install git-flow&lt;/p&gt;
&lt;h2 id=&#34;work-process-with-gitflow&#34;&gt;Work process with Gitflow&lt;/h2&gt;
&lt;h3 id=&#34;main-branches-master-and-development-branches-develop&#34;&gt;Main branches (master) and development branches (develop)&lt;/h3&gt;
&lt;p&gt;To commit the history of the project within this process instead of a single master branch
two branches are used. The master branch holds the official release history, while the develop branch is for merging all the features. In addition, for convenience
it is recommended to give all commits in the master branch a version number.
When using the git-flow extension library, you need to initialize the structure in an existing repository:&lt;/p&gt;
&lt;p&gt;1 git flow init&lt;/p&gt;
&lt;p&gt;For github, the Version tag prefix should be set to v.
After that, check which branch you are on:&lt;/p&gt;
&lt;p&gt;1 git branch&lt;/p&gt;
&lt;h3 id=&#34;feature-branches&#34;&gt;Feature branches&lt;/h3&gt;
&lt;p&gt;Each new feature should have its own branch, which can be
send to the central repository for backup or sharing
team work. Feature branches are created not on the basis of master, but on the basis of develop.
When work on a feature is completed, the corresponding branch is merged back
with the develop branch. Features should not be pushed directly to the master branch.
Typically, feature branches are created from the latest develop branch.&lt;/p&gt;
&lt;h3 id=&#34;creating-a-feature-branch&#34;&gt;Creating a feature branch&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s create a new feature branch:&lt;/p&gt;
&lt;p&gt;1 git flow feature start feature_branch&lt;/p&gt;
&lt;p&gt;Further we work as usual&lt;/p&gt;
&lt;h3 id=&#34;end-of-work-on-a-feature-branch&#34;&gt;End of work on a feature branch&lt;/h3&gt;
&lt;p&gt;Upon completion of work on a feature
merge feature_branch with develop:&lt;/p&gt;
&lt;p&gt;1 git flow feature finish feature_branch&lt;/p&gt;
&lt;h3 id=&#34;release-branches&#34;&gt;Release branches&lt;/h3&gt;
&lt;p&gt;When the develop branch has enough features to release, the develop branch
a release branch is created. Creating this branch starts the next release cycle,
and from that moment on, new functions can no longer be added - only debugging is allowed,
creating documentation and solving other problems. When the release preparation is completed,
the release branch is merged into master and given a version number. After that, you need to merge with the develop branch, in which, since the creation of the release branch,
changes occur.
Due to the fact that a special branch is used for preparing releases, one
a team can refine the current release while another team continues
work on features for the next one.
You can create a new release branch with the following command:&lt;/p&gt;
&lt;p&gt;1 git flow release start 1.0.0&lt;/p&gt;
&lt;p&gt;The following commands are used to complete work on the release branch:&lt;/p&gt;
&lt;p&gt;1 git flow release finish 1.0.0&lt;/p&gt;
&lt;h3 id=&#34;hotfix-branches&#34;&gt;Hotfix branches&lt;/h3&gt;
&lt;p&gt;Support branches or hotfix branches are used for quick fixes
to working releases. They are created from the master branch. This is the only thread that
must be created directly from master. Once the fix is ​​complete,
the branch should be merged into master and develop. The master branch should be tagged with an updated version number.
Having a dedicated branch for fixing bugs allows the team to resolve issues without interrupting the rest of the workflow or waiting for the next cycle.
release.
A hotfix branch can be created with the following commands:&lt;/p&gt;
&lt;p&gt;1 git flow hotfix start hotfix_branch&lt;/p&gt;
&lt;p&gt;When finished, the hotfix branch is merged into master and develop:&lt;/p&gt;
&lt;p&gt;1 git flow hotfix finish hotfix_branch&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://aaandrievskaya.github.io/ru/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://aaandrievskaya.github.io/ru/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-wowchemy&#34;&gt;Create slides in Markdown with Wowchemy&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wowchemy&lt;/a&gt; | &lt;a href=&#34;https://owchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;porridge&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;blueberry&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;porridge&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;blueberry&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Eating...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;span class=&#34;fragment &#34; &gt;
  One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  &lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
  Three
&lt;/span&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{% speaker_note %}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; Only the speaker can read these notes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; Press &lt;span class=&#34;sb&#34;&gt;`S`&lt;/span&gt; key to view
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  {{% /speaker_note %}}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;slide&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;background-image&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/media/boards.jpg&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;slide&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;#0000FF&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;slide&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;my-style&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;reveal&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;reveal&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;h2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;reveal&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;h3&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;navy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/discussions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://aaandrievskaya.github.io/ru/admin/config.yml</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://aaandrievskaya.github.io/ru/admin/config.yml</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
