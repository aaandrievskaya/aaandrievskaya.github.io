[{"authors":null,"categories":null,"content":"Hello my dear friends, itâ€™s very hard to me to make this site. I hope you are trusting in me. Have fun :)\n  Download my resumÃ©.\n","date":1651881600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1651881600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Hello my dear friends, itâ€™s very hard to me to make this site. I hope you are trusting in me. Have fun :)\n  Download my resumÃ©.","tags":null,"title":"Andrievskaya Anastasiya Andreevna","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemyâ€™s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://aaandrievskaya.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Andrievskaya Anastasiya Andreevna","Andrievskaya A.A."],"categories":["Demo"],"content":"It is life So, I will no longer pull and tell you what happened. On Wednesday, I was in a hurry to go home, as it was already quite late. I stumbled and twisted my leg. It didnâ€™t hurt me and at that moment I didnâ€™t attach any importance to it. However, already on Friday, the leg was very swollen and it was impossible to walk. I had to go to the emergency room and explain the situation. Of course, there was no talk of attending a university. I was issued a sick leave and now Iâ€™m staying at home, away from all the interesting eventsâ€¦\nHowever, perhaps this is for the best. During this time, I will miss all my friends enough and it will be doubly joyful to see them again! Also, from now on, I will be much more accurate, because I no longer want to experience this for myself.\nNow my leg already feels much better and is gradually disappearing, so you donâ€™t have to worry, I will definitely return to the ranks !!!)\nMy social networks  VK Instagram  ","date":1651881600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651881600,"objectID":"b72527a41af8b6617f7ede6804039cb0","permalink":"https://aaandrievskaya.github.io/post/%D0%BDow-was-my-week/","publishdate":"2022-05-07T00:00:00Z","relpermalink":"/post/%D0%BDow-was-my-week/","section":"post","summary":"Hello everyone ðŸ‘‹ This post, although the first one, will tell you about the failures in my life. But never despair! A bad experience is also an experience ;)","tags":["Work from home","On a sick leave"],"title":"There are disappointments in life","type":"post"},{"authors":["Andrievskaya Anastasiya Andreevna","Andrievskaya A.A."],"categories":["Demo"],"content":"Version control systems. General concepts Version control systems (VCS) are used when several people work on the same project. Usually the main project tree is stored in the local or a remote repository to which access is configured for project members. At making changes to the content of the project, the version control system allows them to fix, combine changes made by different project participants, rollback to any earlier version of the project, if required. Classical version control systems use a centralized model, assuming a single repository for storing files. Most of the version control functions are performed by a dedicated server. The project participant (user) before starting work through certain command gets the version of files it needs. After making changes, the user commits the new version to the repository. This does not remove previous versions. from the central repository and you can return to them at any time. The server can save not the full version of the changed files, but produce the so-called delta compression - save only changes between successive versions, which allows you to reduce the amount of stored data. Version control systems support traceability and resolution conflicts that may arise when several people work on one file. You can merge (merge) the changes made by different participants (automatically or manually), manually select the desired version, undo the changes altogether or lock files for modification. Depending on the settings, blocking is not allows other users to get a working copy or prevents modification working copy of the file by means of the OS file system, thus providing privileged access to only one user working with the file. Version control systems can also provide additional, more flexible functionality. For example, they can support working with multiple versions of the same file, keeping a common history of changes up to the branch point. versions and each branchâ€™s own change histories. In addition, it is usually available information about which of the participants, when and what changes were made. Usually this kind of information is stored in the change log, access to which can be restricted. Unlike classical ones, in distributed version control systems, the central the repository is optional. Among the classic VCS, CVS, Subversion are the most famous, and among the distributed ones - Git, Bazaar, Mercurial. The principles of their work are similar, they differ mainly the syntax of the commands used in the work.\nBasic git commands The most commonly used git commands are: â€“ creating the main repository tree:\n1 git init\nâ€“ receiving updates (changes) of the current tree from the central repository:\n1 git pull\nâ€“ sending all the changes made to the local tree to the central repository:\n1 git push\nâ€“ view the list of changed files in the current directory:\n1 git status\nâ€“ view current changes:\n1 git diff\nâ€“ saving current changes: â€“ add all modified and/or created files and/or directories:\n1 git add .\nâ€“ add specific modified and/or created files and/or directories:\n1 git add filenames\nâ€“ delete a file and/or directory from the repository index (in this case, the file and/or directory remains in the local directory):\n1 git rm filenames\nâ€“ saving the added changes: â€“ save all added changes and all modified files:\n1 git commit -am â€˜Commit descriptionâ€™\n save the added changes with a comment through the built-in editor:  1 git commit\nâ€“ creating a new branch based on the current one:\n1 git checkout -b branchname\n switch to some branch:  1 git checkout branch_name\n(when you switch to a branch that is not yet in the local repository, it will be created and linked to the remote) â€“ pushing changes of a specific branch to the central repository:\n1 git push origin branchname\nâ€“ merge the branch with the current tree:\n1 git merge â€“no-ff branchname\n deleting a branch: â€“ deleting a local branch already merged with the main tree:  1 git branch -d branchname\n forced deletion of the local branch:  1 git branch -D branchname\nâ€“ deleting a branch from the central repository:\n1 git push origin :branchname\nStandard Operating Procedures for a Central Repository The work of the user with his branch begins with checking and receiving changes from the central repository (at the same time, to the local tree before starting this procedure should not be changed):\n1 git checkout master 2 git-pull 3 git checkout -b branchname\nYou can then make changes in the local tree and/or branch. After the completion of making some change to the files and / or directories of the project you need to place them in the central repository. To do this, you need to check, which files have changed so far:\n1 git status\nand, if necessary, delete unnecessary files that we do not want to send to the central repository. Then it is useful to review the text of the changes for compliance with the rules for maintaining clean commits:\n1 git diff\nIf some files should not be included in the commit, then we mark only those â€¦","date":1651881600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651881600,"objectID":"97164bfe184b400c3adb26bd96db98ad","permalink":"https://aaandrievskaya.github.io/post/version-control.-git/","publishdate":"2022-05-07T00:00:00Z","relpermalink":"/post/version-control.-git/","section":"post","summary":"We will study the ideology and application of version control tools. Master the skills of working with git.","tags":["Work","Git"],"title":"Version management. Git","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Letâ€™s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://aaandrievskaya.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://aaandrievskaya.github.io/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":["Andrievskaya Anastasiya Andreevna","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://aaandrievskaya.github.io/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]